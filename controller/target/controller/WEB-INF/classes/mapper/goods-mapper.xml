<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhongruan.dao.GoodsDao">

    <resultMap id="GoodsMap" type="com.zhongruan.bean.Goods">
        <id property="goodsId" column="goodsId"/>
        <result property="userId" column="userId"/>
        <result property="typeId" column="typeId"/>
        <result property="goodsName" column="goodsName"/>
        <result property="goodsContent" column="goodsContent"/>
        <result property="goodsNumber" column="goodsNumber"/>
        <result property="goodsOrginalPrice" column="goodsOrginalPrice"/>
        <result property="goodsNowPrice" column="goodsNowPrice"/>
        <result property="goodsPopularity" column="goodsPopularity"/>
        <result property="goodsStatus" column="goodsStatus"/>
        <result property="goodsImage" column="goodsImage"/>
        <result property="isBuy" column="isBuy"/>
    </resultMap>


    <insert id="insertGoods"  parameterType="com.zhongruan.bean.Goods">
        insert into goods(userId,typeId,goodsName,goodsContent,goodsNumber,goodsOrginalPrice,goodsNowPrice,goodsPopularity,goodsStatus,goodsImage)
        values (#{userId},#{typeId},#{goodsName},#{goodsContent},#{goodsNumber},#{goodsOrginalPrice},#{goodsNowPrice},#{goodsPopularity},#{goodsStatus},#{goodsImage})
    </insert>

    <delete id="deleeGoods" parameterType="java.lang.Long">
        delete from goods where goodsId=#{goodsId}
    </delete>

    <select id="findByGoodsId" parameterType="java.lang.Long" resultMap="GoodsMap">
        select * from goods
        where goodsId=#{goodsId}
    </select>

    <select id="findByGoodsNameLike" parameterType="java.lang.String" resultMap="GoodsMap">
     select *
     from goods
     where goodsName like "%"#{goodsName}"%"and goodsId not in (select goodsId from purchase)
    </select>

    <select id="findByGoodsNowPriceBetween" parameterType="java.lang.String" resultMap="GoodsMap">
        select * from goods
        where goodsNowPrice > #{startPrice} and goodsNowPrice &lt; #{endPrice}
    </select>

    <select id="findByGoodsPopularityDesc" parameterType="java.lang.String" resultMap="GoodsMap">
        select * from goods
        where  goodsId not in (select goodsId from purchase)
        order by goodsPopularity desc
    </select>

    <select id="findByGoodsPopularityAsc" parameterType="java.lang.String" resultMap="GoodsMap">
        select * from goods
        order by goodsPopularity asc
    </select>

    <select id="findByGoodsStatusDesc" parameterType="java.lang.String" resultMap="GoodsMap">
        select * from goods
        order by goodsStatus desc
    </select>

    <select id="findByGoodsStatusAsc" parameterType="java.lang.String" resultMap="GoodsMap">
        select * from goods
        order by goodsStatus asc
    </select>

   <select id="findByIsBuyAndUserId" parameterType="java.lang.Long" resultMap="GoodsMap" >
       SELECT * FROM goods
       WHERE goodsId IN (SELECT goodsId FROM purchase WHERE userId=#{userId})
   </select>

    <select id="findByNotByAndAdd" parameterType="java.lang.Long" resultMap="GoodsMap">
        select * from goods
        where goodsId not in(select goodsId from purchase)
        and userId=#{userId}
    </select>

    <select id="findGoodsByUserId" parameterType="java.lang.Long" resultMap="GoodsMap">
       SELECT * FROM goods WHERE goodsId IN (SELECT goodsId FROM enshrine WHERE userId = #{userId})
    </select>

    <select id="findGoodsExc"  resultMap="GoodsMap" >
      select *
     from goods
     where  goodsId not in (select goodsId from purchase)
   </select>

    <select id="findGoodsByType" parameterType="java.lang.Long" resultMap="GoodsMap">
     select *
     from goods
     where typeId=#{typeId} and goodsId not in (select goodsId from purchase)
    </select>

    <select id="findByGoodsPriceDesc" resultMap="GoodsMap">
        select * from goods
        where  goodsId not in (select goodsId from purchase)
        order by goodsNowPrice desc
    </select>

    <select id="findByGoodsPriceAsc" resultMap="GoodsMap">
        select * from goods
        where  goodsId not in (select goodsId from purchase)
        order by goodsNowPrice asc
    </select>
</mapper>
